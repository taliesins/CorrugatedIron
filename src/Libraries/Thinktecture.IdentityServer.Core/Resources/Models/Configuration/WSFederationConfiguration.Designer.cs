//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thinktecture.IdentityServer.Resources.Models.Configuration
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class WSFederationConfiguration {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WSFederationConfiguration() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Thinktecture.IdentityServer.Resources.Models.Configuration.WSFederationConfigurat" +
                            "ion", typeof(WSFederationConfiguration).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow ReplyTo parameter.
        /// </summary>
        public static string AllowReplyTo {
            get {
                return ResourceManager.GetString("AllowReplyTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows specifying a WS-Federation replyto parameter. Otherwise this parameter is always ignored..
        /// </summary>
        public static string AllowReplyToDescription {
            get {
                return ResourceManager.GetString("AllowReplyToDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Sign-in.
        /// </summary>
        public static string EnableAuthentication {
            get {
                return ResourceManager.GetString("EnableAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable sign-in via WS-Federation..
        /// </summary>
        public static string EnableAuthenticationDescription {
            get {
                return ResourceManager.GetString("EnableAuthenticationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Federation.
        /// </summary>
        public static string EnableFederation {
            get {
                return ResourceManager.GetString("EnableFederation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable federated sign-in via WS-Federation (see Identity Providers)..
        /// </summary>
        public static string EnableFederationDescription {
            get {
                return ResourceManager.GetString("EnableFederationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Home Realm Discovery.
        /// </summary>
        public static string EnableHrd {
            get {
                return ResourceManager.GetString("EnableHrd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the identity provider selection screen for federated sign-in..
        /// </summary>
        public static string EnableHrdDescription {
            get {
                return ResourceManager.GetString("EnableHrdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require ReplyTo within Realm.
        /// </summary>
        public static string RequireReplyToWithinRealm {
            get {
                return ResourceManager.GetString("RequireReplyToWithinRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes sure that the replyto parameter is a sub-URL of the realm..
        /// </summary>
        public static string RequireReplyToWithinRealmDescription {
            get {
                return ResourceManager.GetString("RequireReplyToWithinRealmDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require SSL.
        /// </summary>
        public static string RequireSslForReplyTo {
            get {
                return ResourceManager.GetString("RequireSslForReplyTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforces SSL for the replyto address. Should always be enabled..
        /// </summary>
        public static string RequireSslForReplyToDescription {
            get {
                return ResourceManager.GetString("RequireSslForReplyToDescription", resourceCulture);
            }
        }
    }
}
